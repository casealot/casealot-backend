server:
  port: 8000
  error:
    include-stacktrace: never
    include-message: always

spring:
  # Database 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USER_NAME}
    password: ${DB_PASSWORD}
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
  # JPA 설정
  jpa:
    generate-ddl: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        use_sql_comments: true
    open-in-view: false
  # Security OAuth
  security:
    oauth2.client:
      registration:
        naver:
          clientId: ${NAVER_CLIENT_ID}
          clientSecret: ${NAVER_CLIENT_SECRET}
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: ${NAVER_REDIRECT_URI}
          scope:
            - nickname
            - email
            - profile_image
          clientName: Naver
        kakao:
          clientId: ${KAKAO_CLIENT_ID}
          clientSecret: ${KAKAO_CLIENT_SECRET}
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: ${KAKAO_REDIRECT_URI}
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao
      # Provider 설정
      provider:
        naver:
          authorizationUri: https://nid.naver.com/oauth2.0/authorize
          tokenUri: https://nid.naver.com/oauth2.0/token
          userInfoUri: https://openapi.naver.com/v1/nid/me
          userNameAttribute: response
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# jwt
jwt.secret-key: ${JWT_SECRET_KEY}

# 토큰 관련 secret Key 및 RedirectUri 설정
app:
  auth:
    tokenSecret: ${TOKEN_SECRET}
    tokenExpiry: ${TOKEN_EXPIRY}
    refreshTokenExpiry: ${REFRESH_TOKEN_EXPIRY}
  oauth2:
    authorizedRedirectUris:
      - ${AUTHORIZED_REDIRECT_URIS}
    defaultRedirectUri: ${DEFAULT_REDIRECT_URI}

upload:
  path: ${UPLOAD_PATH}

# S3 config
cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}
    stack.auto: false
    region:
      static: ${AWS_S3_REGION}
    credentials:
      accessKey: ${AWS_S3_BUCKET_ACCESS_KEY}
      secretKey: ${AWS_S3_BUCKET_SECRET_KEY}

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error

pgmodule:
  app-id: ${APP_ID}
  api-key: ${API_KEY}
  secret-key: ${SECRET_API_KEY}